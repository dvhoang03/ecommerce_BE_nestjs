version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_TTL=5000
    ports:
      - '3000:3000'
    depends_on:
      - mysql
      - minio
      - redis
      - kafka
    volumes:
      - .:/app
      - /app/node_modules # tránh ghi đè node_modules trong container

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #   ZOOKEEPER_CLIENT_PORT: 2181
  #   ports:
  #     - 2181:2181
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql

  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data

  redis:
    image: redis/redis-stack-server:latest
    # Sử dụng image Redis mới nhất
    container_name: redis
    restart: unless-stopped # Redis sẽ tự động khởi động lại trừ khi dừng thủ công
    ports:
      - '6379:6379' # Ánh xạ cổng Redis vào máy chủ
    volumes:
      - redis_data:/data # Sử dụng volume để lưu trữ dữ liệu Redis

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   ports:
  #     - 2181:2181
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper1
    ports:
      - "2181:2181"
    restart: unless-stopped

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #   ports:
  #     - 9092:9092
  kafka:
    image: wurstmeister/kafka
    container_name: kafka1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

volumes:
  mysql_data:
  minio_data:
  redis_data:
